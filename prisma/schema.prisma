type cartProductType {
  id          String
  name        String
  description String
  category    String
  brand       String
  selectImg   selectImgType
  quantity    Int
  price       Float
}

type selectImgType {
  color     String
  colorCode String
  image     String
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  name           String?
  email          String?   @unique
  emailVerified  DateTime?
  image          String?
  hashedPassword String?
  accounts       Account[]
  order          Order[]
  role           Role      @default(USER)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  USER
  ADMIN
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Order {
  id             String            @id @default(auto()) @map("_id") @db.ObjectId
  userId         String            @db.ObjectId
  status         String
  amount         Float
  currency       String
  deliveryStatus String
  createdAt      DateTime          @default(now())
  paymentId      String            @unique
  products       cartProductType[]
  address        Address?
  user           User              @relation(fields: [userId], references: [id], onDelete: Cascade)
}

type Address {
  city        String?
  country     String?
  line1       String?
  line2       String?
  postal_code String?
  state       String?
}
